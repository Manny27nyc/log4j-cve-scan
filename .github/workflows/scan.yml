name: ci

on:
  push:

jobs:
  scan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - library/alpine
    steps:
      -
        name: Get Docker JWT Token
        id: jwt
        run: |
          TOKEN=$(curl -s -H "Content-Type: application/json" "https://auth.docker.io/token?service=registry.docker.io&scope=repository:${{ matrix.image }}:pull" | jq -r .token)
          if [ -z ${TOKEN} -o ${TOKEN} == "null" ]; then
          echo "::error::Cannot retrieve token"
          exit 1
          fi
          echo ::set-output name=token::${TOKEN}
      -
        name: Get Docker Tags
        id: tags
        if: success()
        run: |
          TAG_LIST=$(curl -s -H "Authorization: Bearer ${{ steps.jwt.outputs.token }}" "https://index.docker.io/v2/${{ matrix.image }}/tags/list" | jq -rc '.tags[]')
          echo ::set-output name=list::${TAG_LIST}
      -
        name: Install Trivy
        run: |
          curl -SsL "https://github.com/aquasecurity/trivy/releases/download/v0.21.2/trivy_0.21.2_Linux-64bit.deb" -o "/tmp/trivy.deb"
          sudo dpkg -i /tmp/trivy.deb
          trivy --version
#      -
#        name: Docker Scan
#        if: success()
#        run: |
#          for TAG in $(echo ${{ steps.tags.outputs.list }} | sed "s/,/ /g"); do
#
#            if [ "$3" != "latest" ] && [ "$TAG" = "$2-$3" ]; then
#              echo "ðŸ”« Tag $2-$3 already exists and is not latest... Skipping..."
#              return
#            fi
#          done
#      -
#        name: Scan for vulnerabilities
#        uses: crazy-max/ghaction-container-scan@master
#        with:
#          image: ${{ matrix.image }}
